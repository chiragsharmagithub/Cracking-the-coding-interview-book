1.1 Is Unique:
Implement an algorithm to determine if a string has all unique characters. What if you cannot use additional data structures?

ASCII char set = 128 characters
Extended ASCII char set = 256 characters
Unicode char set (multilingual text)
    UTF-8       = 20,97,152
    UTF-16      = 11,14,111
    UTF-32      = 11,14,111

It's okay to assume 256 characters. This would be the case in Extended ASCII.
We are taking ASCII (128 characters).

Approach:
Create an array of boolean values, where the flag at index i indicates whether character i in the alphabet is conatined in the string. The second time you see this character you can immediately return false.

Code:

boolean isUnique(String str) {
    if(str.length > 128) return false;

    boolean[] char_set = new boolean[128];
    for(int i=0; i,str.length; i++) {
        int val = str.charAt(i);
        if(char_set[val]) {                             // Already found this char in string
            return false;
        }
        char_set[val] = true;
    }
    return true;
}

TC: O(N)
SC: O(1) or O(c) where N = size of string, c = constant.